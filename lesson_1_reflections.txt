How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    With diff resource we can easily discovery wich changes may or may not have
    impacted the code. The diff resource shows us only what really matter in the
    sense of file changes. Letting us focus right in the changes, once they're
    highlighted.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Having access to the entire history of a file is very usefull in a development
    environment, once maybe we can insert a bug in some version of the program and
    we want to now who, when and how the bug was inserted. It also make us able to
    restore to a entire previous version if we want.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros:
    - As the programmer you is the best person to evaluate when a change become
      reasonable to commit.
    - You can establish with your team wich are the standards for commits.
    - You can write a commit message to make it easier to identify what were the
      changes.
    Cons:
    - Maybe you can forget to commit for a long time? Maybe.. But I don't think
      it worth.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because the main purpose of the tools are different. Git is designed to serve
    as a code control version tool, and for this it make sense to allow a commit
    with more than one file, once a single functional change can impact lots of files.


How can you use the commands git log and git diff to view the history of files?

    I can user git log to scroll over all the commits, loking for messages and
    changed files. I can use git diff to see the differences between two specific
    files as I want.

How might using version control make you more confident to make changes that
could break something?

    Just to think that we can revert the changes to where there was no bug make
    me a lot more confident.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to try to use it within github, creating an account, creating a new
    project and uploading/downloading it.